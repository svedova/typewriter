{"version":3,"file":"bundle.js","sources":["src/TypeWriter.js"],"sourcesContent":["const consume = promises => {\n  const promise = promises[0];\n\n  if (promise) {\n    return promise().then(() => consume(promises.slice(1)));\n  }\n\n  return Promise.resolve();\n};\n\nexport default class TypeWriter {\n  constructor(element, opts = { pause: 1000, speed: 5 }) {\n    this.element = element;\n    this.opts = opts;\n    this.stack = [];\n    this.speed = (10 - opts.speed) * 10;\n  }\n\n  /**\n   * Type a string.\n   *\n   * @param {string} string\n   * @param {HTMLElement} element The element to write\n   */\n  type(string, element = this.element) {\n    this.stack.push(\n      () =>\n        new Promise(resolve => {\n          let timeout = 0;\n\n          string.split(\"\").forEach((s, i) => {\n            timeout += this.speed;\n            setTimeout(() => {\n              const className = this.opts.className || \"typewriter\";\n              const prevTypeWriter = document.querySelector(\".\" + className);\n\n              if (prevTypeWriter) {\n                prevTypeWriter.classList.remove(className);\n              }\n\n              element.innerHTML += s;\n              element.classList.add(className);\n\n              if (string.length === i + 1) {\n                resolve();\n              }\n            }, timeout);\n          });\n        })\n    );\n\n    return this;\n  }\n\n  /**\n   * Pause the action.\n   *\n   * @param timeout\n   */\n  pause(timeout = this.opts.pause) {\n    this.stack.push(\n      () =>\n        new Promise(resolve => {\n          setTimeout(resolve, timeout);\n        })\n    );\n\n    return this;\n  }\n\n  /**\n   * Delete the text.\n   */\n  delete() {\n    this.stack.push(\n      () =>\n        new Promise(resolve => {\n          this.element.innerHTML = \"&#65279;\";\n          resolve();\n        })\n    );\n\n    return this;\n  }\n\n  /**\n   * Start the type writer.\n   */\n  start() {\n    consume(this.stack);\n  }\n\n  /**\n   * Loop over again and again.\n   */\n  loop() {\n    const clone = this.stack.slice(0);\n\n    if (!clone.length) {\n      return;\n    }\n\n    consume(this.stack)\n      .then(() => {\n        this.stack = clone;\n        this.loop();\n      })\n      .catch(() => {\n        // Do nothing\n      });\n  }\n}\n\n"],"names":["consume","promise","promises","then","slice","Promise","resolve","TypeWriter","element","opts","pause","speed","stack","string","push","timeout","split","forEach","s","i","className","prevTypeWriter","document","querySelector","classList","remove","innerHTML","add","length","clone","loop","catch"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAMA,UAAU,SAAVA,OAAU,WAAY;MACpBC,UAAUC,SAAS,CAAT,CAAhB;;MAEID,OAAJ,EAAa;WACJA,UAAUE,IAAV,CAAe;aAAMH,QAAQE,SAASE,KAAT,CAAe,CAAf,CAAR,CAAN;KAAf,CAAP;;;SAGKC,QAAQC,OAAR,EAAP;CAPF;;IAUqBC;sBACPC,OAAZ,EAAuD;QAAlCC,IAAkC,uEAA3B,EAAEC,OAAO,IAAT,EAAeC,OAAO,CAAtB,EAA2B;;;SAChDH,OAAL,GAAeA,OAAf;SACKC,IAAL,GAAYA,IAAZ;SACKG,KAAL,GAAa,EAAb;SACKD,KAAL,GAAa,CAAC,KAAKF,KAAKE,KAAX,IAAoB,EAAjC;;;;;;;;;;;;;yBASGE,QAAgC;;;UAAxBL,OAAwB,uEAAd,KAAKA,OAAS;;WAC9BI,KAAL,CAAWE,IAAX,CACE;eACE,IAAIT,OAAJ,CAAY,mBAAW;cACjBU,UAAU,CAAd;;iBAEOC,KAAP,CAAa,EAAb,EAAiBC,OAAjB,CAAyB,UAACC,CAAD,EAAIC,CAAJ,EAAU;uBACtB,MAAKR,KAAhB;uBACW,YAAM;kBACTS,YAAY,MAAKX,IAAL,CAAUW,SAAV,IAAuB,YAAzC;kBACMC,iBAAiBC,SAASC,aAAT,CAAuB,MAAMH,SAA7B,CAAvB;;kBAEIC,cAAJ,EAAoB;+BACHG,SAAf,CAAyBC,MAAzB,CAAgCL,SAAhC;;;sBAGMM,SAAR,IAAqBR,CAArB;sBACQM,SAAR,CAAkBG,GAAlB,CAAsBP,SAAtB;;kBAEIP,OAAOe,MAAP,KAAkBT,IAAI,CAA1B,EAA6B;;;aAX/B,EAcGJ,OAdH;WAFF;SAHF,CADF;OADF;;aA0BO,IAAP;;;;;;;;;;;4BAQ+B;UAA3BA,OAA2B,uEAAjB,KAAKN,IAAL,CAAUC,KAAO;;WAC1BE,KAAL,CAAWE,IAAX,CACE;eACE,IAAIT,OAAJ,CAAY,mBAAW;qBACVC,OAAX,EAAoBS,OAApB;SADF,CADF;OADF;;aAOO,IAAP;;;;;;;;;8BAMO;;;WACFH,KAAL,CAAWE,IAAX,CACE;eACE,IAAIT,OAAJ,CAAY,mBAAW;iBAChBG,OAAL,CAAakB,SAAb,GAAyB,UAAzB;;SADF,CADF;OADF;;aAQO,IAAP;;;;;;;;;4BAMM;cACE,KAAKd,KAAb;;;;;;;;;2BAMK;;;UACCiB,QAAQ,KAAKjB,KAAL,CAAWR,KAAX,CAAiB,CAAjB,CAAd;;UAEI,CAACyB,MAAMD,MAAX,EAAmB;;;;cAIX,KAAKhB,KAAb,EACGT,IADH,CACQ,YAAM;eACLS,KAAL,GAAaiB,KAAb;eACKC,IAAL;OAHJ,EAKGC,KALH,CAKS,YAAM;;OALf;;;;;;;;;;;;"}